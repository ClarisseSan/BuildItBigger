/*
   For step-by-step instructions on connecting your Android application to this backend module,
   see "App Engine Java Endpoints Module" template documentation at
   https://github.com/GoogleCloudPlatform/gradle-appengine-templates/tree/master/HelloEndpoints
*/

package com.example.isse.myapplication.backend;

import com.example.Joker;
import com.google.api.server.spi.config.Api;
import com.google.api.server.spi.config.ApiMethod;
import com.google.api.server.spi.config.ApiNamespace;

import javax.inject.Named;

/**
 * An endpoint class we are exposing
 * @Api contains the configuration details of the backend API.
 */
@Api(
        name = "myApi",
        version = "v1",
        namespace = @ApiNamespace(
                ownerDomain = "backend.myapplication.isse.example.com",
                ownerName = "backend.myapplication.isse.example.com",
                packagePath = ""
        )
)
public class MyEndpoint {

    //TODO You must specify which clients are allowed to access the API backend by means of a whitelist of client IDs.
    // A client ID is generated by the Google Cloud Platform Console from a client secret,
    // such as the SHA1 fingerprint of a key used to secure an Android app

    //public static final String ANDROID_CLIENT_ID = "";


    /**
     * A simple endpoint method that takes a name and says Hi back
     *@ApiMethod marks a class method that is part of the backend API.
     * Methods that are not marked with @ApiMethod are not included when you generate client libraries and discovery docs.
     * The @ApiMethod annotation can also be used to override the API configuration for a specific method.
     */
    @ApiMethod(name = "sayHi")
    public MyBean sayHi(@Named("name") String name) {
        MyBean response = new MyBean();
        response.setData("Hi, " + name);

        return response;
    }

    /*
    * A simple endpoint method that takes a joke
    * */
    @ApiMethod(name = "displayJoke")
    public MyJoke displayJoke(){
        Joker joker = new Joker();
        String joke = joker.getJoke();

        MyJoke response = new MyJoke();
        response.setJoke(joke);
        return response;

    }

}
